spring.application.name=rating-service
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/BukyRatings}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

spring.kafka.bootstrap-servers=${KAFKA_ADDRESS:localhost:9092}
kafka.bootstrapAddress=${KAFKA_ADDRESS:localhost:9092}
spring.kafka.consumer.group-id=accommodation-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest


accommodation.BaseURL=http://${ACCOMMODATION_SERVICE:localhost}:8082/api/accommodation
reservation.BaseURL=http://${RESERVATION_SERVICE:localhost}:8083/api/reservation
user.BaseURL=http://${USER_SERVICE:localhost}:8081/api/users
auth.BaseURL=http://${USER_SERVICE:localhost}:8081/api/auth

tracing.url=${TRACING_URL:http://localhost:4318/v1/traces}
management.tracing.sampling.probability=1.0
logging.pattern.level="%5p [${spring.application.name:}, %X{traceId:-},%X{spanId:-}]"

server.port=8084
spring.graphql.graphiql.enabled=true


logging.logstash.enabled=true
logging.logstash.host=${LOGSTASH_DESTINATION:localhost}
logging.logstash.port=5000

logging.logstash.encoder.providers=mdc,context,logLevel,loggerName,pattern,threadName,message,logstashMarkers,stackTrace
logging.logstash.encoder.pattern={"app": "rating-service"}

logging.level.root=info